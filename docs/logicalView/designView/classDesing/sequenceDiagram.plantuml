@startuml sequenceDiagram

skinparam actorStyle awesome

actor Student
boundary TestListView
boundary TestView
boundary SolutionsView
control answerTestController
entity Test
entity Question

activate Student #abc8f5

activate TestListView #abc8f5
Student --> TestListView: selectTest()

TestListView --> TestView: showTest(IDTest)
deactivate TestListView

activate TestView #abc8f5
TestView --> answerTestController: loadQuestions()
activate answerTestController #abc8f5

answerTestController --> Test: getQuestion()
activate Test #abc8f5
Test --> answerTestController: question
deactivate Test

answerTestController --> Question: getDescription()
activate Question #abc8f5
Question --> answerTestController: Description: String
answerTestController --> Question: getJustification()
Question --> answerTestController: Justification: String
answerTestController --> TestView: question
deactivate Question

deactivate answerTestController


TestView --> Student: test
Student --> TestView: startTest()

Student --> TestView: answerQuestion(Answer, QuestionID)
TestView --> answerTestController: saveAnswer(Answer, QuestionID)
activate answerTestController #abc8f5
answerTestController --> Question :setUserAnswer(Answer. QuestionID)
deactivate answerTestController
activate Question #abc8f5

Student --> TestView: endTest()
deactivate TestView
deactivate Question


Student --> SolutionsView: viewSolutions()
activate SolutionsView #abc8f5
SolutionsView --> Test :getQuestions()
activate Test #abc8f5
Test --> SolutionsView :questions.answers
SolutionsView --> Student: showAnswers
deactivate Test
deactivate Student
deactivate SolutionsView

@enduml